//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TP_Retention_EFDM
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TPRetentionEntities : DbContext
    {
        public TPRetentionEntities()
            : base("name=TPRetentionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<Get_Employee_OnRisk_Result> Get_Employee_OnRisk(Nullable<long> employee_Ident)
        {
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("Employee_Ident", employee_Ident) :
                new ObjectParameter("Employee_Ident", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Employee_OnRisk_Result>("Get_Employee_OnRisk", employee_IdentParameter);
        }
    
        public virtual ObjectResult<Get_Employee_OnRisk_ActionLog_Result> Get_Employee_OnRisk_ActionLog(Nullable<long> riskList_Id)
        {
            var riskList_IdParameter = riskList_Id.HasValue ?
                new ObjectParameter("RiskList_Id", riskList_Id) :
                new ObjectParameter("RiskList_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Employee_OnRisk_ActionLog_Result>("Get_Employee_OnRisk_ActionLog", riskList_IdParameter);
        }
    
        public virtual ObjectResult<Get_Layoff_Status_Result> Get_Layoff_Status()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Layoff_Status_Result>("Get_Layoff_Status");
        }
    
        public virtual ObjectResult<Get_Locations_Result> Get_Locations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Locations_Result>("Get_Locations");
        }
    
        public virtual ObjectResult<Get_Managers_Result> Get_Managers(Nullable<int> position_Code_Type_Ident, Nullable<short> location_Ident)
        {
            var position_Code_Type_IdentParameter = position_Code_Type_Ident.HasValue ?
                new ObjectParameter("Position_Code_Type_Ident", position_Code_Type_Ident) :
                new ObjectParameter("Position_Code_Type_Ident", typeof(int));
    
            var location_IdentParameter = location_Ident.HasValue ?
                new ObjectParameter("Location_Ident", location_Ident) :
                new ObjectParameter("Location_Ident", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Managers_Result>("Get_Managers", position_Code_Type_IdentParameter, location_IdentParameter);
        }
    
        public virtual ObjectResult<Get_Positions_Result> Get_Positions(Nullable<short> location_Ident)
        {
            var location_IdentParameter = location_Ident.HasValue ?
                new ObjectParameter("Location_Ident", location_Ident) :
                new ObjectParameter("Location_Ident", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Positions_Result>("Get_Positions", location_IdentParameter);
        }
    
        public virtual ObjectResult<Get_Risk_Action_Categories_Result> Get_Risk_Action_Categories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Risk_Action_Categories_Result>("Get_Risk_Action_Categories");
        }
    
        public virtual ObjectResult<Get_Risk_Case_Status_Result> Get_Risk_Case_Status()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Risk_Case_Status_Result>("Get_Risk_Case_Status");
        }
    
        public virtual ObjectResult<Get_Risk_Categories_Result> Get_Risk_Categories(Nullable<int> riskListTypeId)
        {
            var riskListTypeIdParameter = riskListTypeId.HasValue ?
                new ObjectParameter("RiskListTypeId", riskListTypeId) :
                new ObjectParameter("RiskListTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Risk_Categories_Result>("Get_Risk_Categories", riskListTypeIdParameter);
        }
    
        public virtual ObjectResult<Get_Risk_Estimation_Status_Result> Get_Risk_Estimation_Status()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Risk_Estimation_Status_Result>("Get_Risk_Estimation_Status");
        }
    
        public virtual ObjectResult<Get_Risk_Priority_Status_Result> Get_Risk_Priority_Status()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Risk_Priority_Status_Result>("Get_Risk_Priority_Status");
        }
    
        public virtual ObjectResult<Get_Risk_Status_Result> Get_Risk_Status(Nullable<int> profile_Id)
        {
            var profile_IdParameter = profile_Id.HasValue ?
                new ObjectParameter("Profile_Id", profile_Id) :
                new ObjectParameter("Profile_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Risk_Status_Result>("Get_Risk_Status", profile_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Insert_Employee_OnRisk(Nullable<long> employee_Ident, Nullable<short> instalacion_Id, Nullable<System.DateTime> riskDate, Nullable<short> category_Id, Nullable<short> riskStatus_Id, string riskDescription, Nullable<long> manager_Ident, Nullable<long> floorManager_Ident, Nullable<int> program_Ident, string userIns, Nullable<int> riskListType_Id, Nullable<System.DateTime> resignationDate, Nullable<System.DateTime> reviewDate, Nullable<short> estimacionRiesgo_Id)
        {
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("Employee_Ident", employee_Ident) :
                new ObjectParameter("Employee_Ident", typeof(long));
    
            var instalacion_IdParameter = instalacion_Id.HasValue ?
                new ObjectParameter("Instalacion_Id", instalacion_Id) :
                new ObjectParameter("Instalacion_Id", typeof(short));
    
            var riskDateParameter = riskDate.HasValue ?
                new ObjectParameter("RiskDate", riskDate) :
                new ObjectParameter("RiskDate", typeof(System.DateTime));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(short));
    
            var riskStatus_IdParameter = riskStatus_Id.HasValue ?
                new ObjectParameter("RiskStatus_Id", riskStatus_Id) :
                new ObjectParameter("RiskStatus_Id", typeof(short));
    
            var riskDescriptionParameter = riskDescription != null ?
                new ObjectParameter("RiskDescription", riskDescription) :
                new ObjectParameter("RiskDescription", typeof(string));
    
            var manager_IdentParameter = manager_Ident.HasValue ?
                new ObjectParameter("Manager_Ident", manager_Ident) :
                new ObjectParameter("Manager_Ident", typeof(long));
    
            var floorManager_IdentParameter = floorManager_Ident.HasValue ?
                new ObjectParameter("FloorManager_Ident", floorManager_Ident) :
                new ObjectParameter("FloorManager_Ident", typeof(long));
    
            var program_IdentParameter = program_Ident.HasValue ?
                new ObjectParameter("Program_Ident", program_Ident) :
                new ObjectParameter("Program_Ident", typeof(int));
    
            var userInsParameter = userIns != null ?
                new ObjectParameter("UserIns", userIns) :
                new ObjectParameter("UserIns", typeof(string));
    
            var riskListType_IdParameter = riskListType_Id.HasValue ?
                new ObjectParameter("RiskListType_Id", riskListType_Id) :
                new ObjectParameter("RiskListType_Id", typeof(int));
    
            var resignationDateParameter = resignationDate.HasValue ?
                new ObjectParameter("ResignationDate", resignationDate) :
                new ObjectParameter("ResignationDate", typeof(System.DateTime));
    
            var reviewDateParameter = reviewDate.HasValue ?
                new ObjectParameter("ReviewDate", reviewDate) :
                new ObjectParameter("ReviewDate", typeof(System.DateTime));
    
            var estimacionRiesgo_IdParameter = estimacionRiesgo_Id.HasValue ?
                new ObjectParameter("EstimacionRiesgo_Id", estimacionRiesgo_Id) :
                new ObjectParameter("EstimacionRiesgo_Id", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Insert_Employee_OnRisk", employee_IdentParameter, instalacion_IdParameter, riskDateParameter, category_IdParameter, riskStatus_IdParameter, riskDescriptionParameter, manager_IdentParameter, floorManager_IdentParameter, program_IdentParameter, userInsParameter, riskListType_IdParameter, resignationDateParameter, reviewDateParameter, estimacionRiesgo_IdParameter);
        }
    
        public virtual int Update_Employee_OnRisk(Nullable<int> riskList_Id, Nullable<System.DateTime> riskDate, Nullable<short> category_Id, Nullable<short> riskStatus_Id, string riskDescription, string userUpd, Nullable<int> riskListType_Id, Nullable<System.DateTime> resignationDate, Nullable<System.DateTime> reviewDate, Nullable<int> estimacionRiesgo_Id)
        {
            var riskList_IdParameter = riskList_Id.HasValue ?
                new ObjectParameter("RiskList_Id", riskList_Id) :
                new ObjectParameter("RiskList_Id", typeof(int));
    
            var riskDateParameter = riskDate.HasValue ?
                new ObjectParameter("RiskDate", riskDate) :
                new ObjectParameter("RiskDate", typeof(System.DateTime));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(short));
    
            var riskStatus_IdParameter = riskStatus_Id.HasValue ?
                new ObjectParameter("RiskStatus_Id", riskStatus_Id) :
                new ObjectParameter("RiskStatus_Id", typeof(short));
    
            var riskDescriptionParameter = riskDescription != null ?
                new ObjectParameter("RiskDescription", riskDescription) :
                new ObjectParameter("RiskDescription", typeof(string));
    
            var userUpdParameter = userUpd != null ?
                new ObjectParameter("UserUpd", userUpd) :
                new ObjectParameter("UserUpd", typeof(string));
    
            var riskListType_IdParameter = riskListType_Id.HasValue ?
                new ObjectParameter("RiskListType_Id", riskListType_Id) :
                new ObjectParameter("RiskListType_Id", typeof(int));
    
            var resignationDateParameter = resignationDate.HasValue ?
                new ObjectParameter("ResignationDate", resignationDate) :
                new ObjectParameter("ResignationDate", typeof(System.DateTime));
    
            var reviewDateParameter = reviewDate.HasValue ?
                new ObjectParameter("ReviewDate", reviewDate) :
                new ObjectParameter("ReviewDate", typeof(System.DateTime));
    
            var estimacionRiesgo_IdParameter = estimacionRiesgo_Id.HasValue ?
                new ObjectParameter("EstimacionRiesgo_Id", estimacionRiesgo_Id) :
                new ObjectParameter("EstimacionRiesgo_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Employee_OnRisk", riskList_IdParameter, riskDateParameter, category_IdParameter, riskStatus_IdParameter, riskDescriptionParameter, userUpdParameter, riskListType_IdParameter, resignationDateParameter, reviewDateParameter, estimacionRiesgo_IdParameter);
        }
    
        public virtual ObjectResult<Get_Employees_Search_Result> Get_Employees_Search(Nullable<long> employee_Ident, string nombre, Nullable<short> top)
        {
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("Employee_Ident", employee_Ident) :
                new ObjectParameter("Employee_Ident", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Employees_Search_Result>("Get_Employees_Search", employee_IdentParameter, nombreParameter, topParameter);
        }
    
        public virtual int Insert_Employee_OnRisk_ActionLog(Nullable<int> riskList_Id, string retentionAction, Nullable<int> riskStatus_Id, string userIns)
        {
            var riskList_IdParameter = riskList_Id.HasValue ?
                new ObjectParameter("RiskList_Id", riskList_Id) :
                new ObjectParameter("RiskList_Id", typeof(int));
    
            var retentionActionParameter = retentionAction != null ?
                new ObjectParameter("RetentionAction", retentionAction) :
                new ObjectParameter("RetentionAction", typeof(string));
    
            var riskStatus_IdParameter = riskStatus_Id.HasValue ?
                new ObjectParameter("RiskStatus_Id", riskStatus_Id) :
                new ObjectParameter("RiskStatus_Id", typeof(int));
    
            var userInsParameter = userIns != null ?
                new ObjectParameter("UserIns", userIns) :
                new ObjectParameter("UserIns", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Employee_OnRisk_ActionLog", riskList_IdParameter, retentionActionParameter, riskStatus_IdParameter, userInsParameter);
        }
    
        public virtual ObjectResult<Get_Employee_Detail_Result> Get_Employee_Detail(Nullable<int> employee_Ident, Nullable<System.DateTime> fechaConsulta)
        {
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("Employee_Ident", employee_Ident) :
                new ObjectParameter("Employee_Ident", typeof(int));
    
            var fechaConsultaParameter = fechaConsulta.HasValue ?
                new ObjectParameter("FechaConsulta", fechaConsulta) :
                new ObjectParameter("FechaConsulta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Employee_Detail_Result>("Get_Employee_Detail", employee_IdentParameter, fechaConsultaParameter);
        }
    
        public virtual ObjectResult<Get_Manager_Employees_Result> Get_Manager_Employees(Nullable<int> manager_Ident, Nullable<System.DateTime> fechaConsulta)
        {
            var manager_IdentParameter = manager_Ident.HasValue ?
                new ObjectParameter("Manager_Ident", manager_Ident) :
                new ObjectParameter("Manager_Ident", typeof(int));
    
            var fechaConsultaParameter = fechaConsulta.HasValue ?
                new ObjectParameter("FechaConsulta", fechaConsulta) :
                new ObjectParameter("FechaConsulta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Manager_Employees_Result>("Get_Manager_Employees", manager_IdentParameter, fechaConsultaParameter);
        }
    
        public virtual ObjectResult<Get_All_Managers_Result> Get_All_Managers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_Managers_Result>("Get_All_Managers");
        }
    
        public virtual ObjectResult<Get_Segment_Result> Get_Segment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Segment_Result>("Get_Segment");
        }
    
        public virtual ObjectResult<Get_All_Clients_Result> Get_All_Clients()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_Clients_Result>("Get_All_Clients");
        }
    
        public virtual ObjectResult<Get_All_FloorManagers_Result> Get_All_FloorManagers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_FloorManagers_Result>("Get_All_FloorManagers");
        }
    
        public virtual ObjectResult<Get_All_RetentionAnalyst_Result> Get_All_RetentionAnalyst()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_RetentionAnalyst_Result>("Get_All_RetentionAnalyst");
        }
    
        public virtual ObjectResult<Get_Employee_Profile_Result> Get_Employee_Profile(Nullable<long> employee_Ident)
        {
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("Employee_Ident", employee_Ident) :
                new ObjectParameter("Employee_Ident", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Employee_Profile_Result>("Get_Employee_Profile", employee_IdentParameter);
        }
    
        public virtual int Set_Employee_Profile(Nullable<long> employee_Ident, string profiles, Nullable<long> user_Id)
        {
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("Employee_Ident", employee_Ident) :
                new ObjectParameter("Employee_Ident", typeof(long));
    
            var profilesParameter = profiles != null ?
                new ObjectParameter("Profiles", profiles) :
                new ObjectParameter("Profiles", typeof(string));
    
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Set_Employee_Profile", employee_IdentParameter, profilesParameter, user_IdParameter);
        }
    
        public virtual ObjectResult<Get_Modules_Profile_Result> Get_Modules_Profile(Nullable<int> profile_Id)
        {
            var profile_IdParameter = profile_Id.HasValue ?
                new ObjectParameter("Profile_Id", profile_Id) :
                new ObjectParameter("Profile_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Modules_Profile_Result>("Get_Modules_Profile", profile_IdParameter);
        }
    
        public virtual ObjectResult<Get_Profile_x_Employee_Result> Get_Profile_x_Employee(Nullable<long> employee_Ident)
        {
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("Employee_Ident", employee_Ident) :
                new ObjectParameter("Employee_Ident", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Profile_x_Employee_Result>("Get_Profile_x_Employee", employee_IdentParameter);
        }
    
        public virtual ObjectResult<Get_RiskListEfficiency_Result> Get_RiskListEfficiency()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_RiskListEfficiency_Result>("Get_RiskListEfficiency");
        }
    
        public virtual ObjectResult<Get_Tenure_Result> Get_Tenure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Tenure_Result>("Get_Tenure");
        }
    
        public virtual ObjectResult<Get_Employees_OnRisk_Result> Get_Employees_OnRisk(Nullable<short> riskStatus_Id, Nullable<System.DateTime> riskDateStart, Nullable<System.DateTime> riskDateEnd, Nullable<System.DateTime> reviewDateStart, Nullable<System.DateTime> reviewDateEnd, Nullable<long> employee_Ident, Nullable<long> manager_Ident, Nullable<long> floorManager_Ident, Nullable<short> location_Ident, string payroll, string cCMS_User, Nullable<int> client_Ident, Nullable<int> program_ident)
        {
            var riskStatus_IdParameter = riskStatus_Id.HasValue ?
                new ObjectParameter("riskStatus_Id", riskStatus_Id) :
                new ObjectParameter("riskStatus_Id", typeof(short));
    
            var riskDateStartParameter = riskDateStart.HasValue ?
                new ObjectParameter("riskDateStart", riskDateStart) :
                new ObjectParameter("riskDateStart", typeof(System.DateTime));
    
            var riskDateEndParameter = riskDateEnd.HasValue ?
                new ObjectParameter("riskDateEnd", riskDateEnd) :
                new ObjectParameter("riskDateEnd", typeof(System.DateTime));
    
            var reviewDateStartParameter = reviewDateStart.HasValue ?
                new ObjectParameter("reviewDateStart", reviewDateStart) :
                new ObjectParameter("reviewDateStart", typeof(System.DateTime));
    
            var reviewDateEndParameter = reviewDateEnd.HasValue ?
                new ObjectParameter("reviewDateEnd", reviewDateEnd) :
                new ObjectParameter("reviewDateEnd", typeof(System.DateTime));
    
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("employee_Ident", employee_Ident) :
                new ObjectParameter("employee_Ident", typeof(long));
    
            var manager_IdentParameter = manager_Ident.HasValue ?
                new ObjectParameter("manager_Ident", manager_Ident) :
                new ObjectParameter("manager_Ident", typeof(long));
    
            var floorManager_IdentParameter = floorManager_Ident.HasValue ?
                new ObjectParameter("floorManager_Ident", floorManager_Ident) :
                new ObjectParameter("floorManager_Ident", typeof(long));
    
            var location_IdentParameter = location_Ident.HasValue ?
                new ObjectParameter("location_Ident", location_Ident) :
                new ObjectParameter("location_Ident", typeof(short));
    
            var payrollParameter = payroll != null ?
                new ObjectParameter("payroll", payroll) :
                new ObjectParameter("payroll", typeof(string));
    
            var cCMS_UserParameter = cCMS_User != null ?
                new ObjectParameter("CCMS_User", cCMS_User) :
                new ObjectParameter("CCMS_User", typeof(string));
    
            var client_IdentParameter = client_Ident.HasValue ?
                new ObjectParameter("client_Ident", client_Ident) :
                new ObjectParameter("client_Ident", typeof(int));
    
            var program_identParameter = program_ident.HasValue ?
                new ObjectParameter("program_ident", program_ident) :
                new ObjectParameter("program_ident", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Employees_OnRisk_Result>("Get_Employees_OnRisk", riskStatus_IdParameter, riskDateStartParameter, riskDateEndParameter, reviewDateStartParameter, reviewDateEndParameter, employee_IdentParameter, manager_IdentParameter, floorManager_IdentParameter, location_IdentParameter, payrollParameter, cCMS_UserParameter, client_IdentParameter, program_identParameter);
        }
    
        public virtual int Insert_Errors(string errorMessage, string stackTrace, Nullable<int> errorNumber, Nullable<short> profileId, string ipAddress, string browser, string userIns, ObjectParameter error_Id)
        {
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var stackTraceParameter = stackTrace != null ?
                new ObjectParameter("StackTrace", stackTrace) :
                new ObjectParameter("StackTrace", typeof(string));
    
            var errorNumberParameter = errorNumber.HasValue ?
                new ObjectParameter("ErrorNumber", errorNumber) :
                new ObjectParameter("ErrorNumber", typeof(int));
    
            var profileIdParameter = profileId.HasValue ?
                new ObjectParameter("ProfileId", profileId) :
                new ObjectParameter("ProfileId", typeof(short));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            var browserParameter = browser != null ?
                new ObjectParameter("Browser", browser) :
                new ObjectParameter("Browser", typeof(string));
    
            var userInsParameter = userIns != null ?
                new ObjectParameter("UserIns", userIns) :
                new ObjectParameter("UserIns", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Errors", errorMessageParameter, stackTraceParameter, errorNumberParameter, profileIdParameter, ipAddressParameter, browserParameter, userInsParameter, error_Id);
        }
    
        public virtual ObjectResult<Get_Employee_OnRisk_InterActionLog_Result> Get_Employee_OnRisk_InterActionLog(Nullable<long> riskList_Id)
        {
            var riskList_IdParameter = riskList_Id.HasValue ?
                new ObjectParameter("RiskList_Id", riskList_Id) :
                new ObjectParameter("RiskList_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Employee_OnRisk_InterActionLog_Result>("Get_Employee_OnRisk_InterActionLog", riskList_IdParameter);
        }
    
        public virtual int Insert_Employee_OnRisk_InterActionLog(Nullable<int> riskList_Id, string interaction, Nullable<int> riskStatus_Id, string userIns)
        {
            var riskList_IdParameter = riskList_Id.HasValue ?
                new ObjectParameter("RiskList_Id", riskList_Id) :
                new ObjectParameter("RiskList_Id", typeof(int));
    
            var interactionParameter = interaction != null ?
                new ObjectParameter("Interaction", interaction) :
                new ObjectParameter("Interaction", typeof(string));
    
            var riskStatus_IdParameter = riskStatus_Id.HasValue ?
                new ObjectParameter("RiskStatus_Id", riskStatus_Id) :
                new ObjectParameter("RiskStatus_Id", typeof(int));
    
            var userInsParameter = userIns != null ?
                new ObjectParameter("UserIns", userIns) :
                new ObjectParameter("UserIns", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Employee_OnRisk_InterActionLog", riskList_IdParameter, interactionParameter, riskStatus_IdParameter, userInsParameter);
        }
    
        public virtual ObjectResult<Get_Programs_By_Clent_Result> Get_Programs_By_Clent(Nullable<int> client_Ident)
        {
            var client_IdentParameter = client_Ident.HasValue ?
                new ObjectParameter("Client_Ident", client_Ident) :
                new ObjectParameter("Client_Ident", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Programs_By_Clent_Result>("Get_Programs_By_Clent", client_IdentParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Check_Employee_Ident(Nullable<long> employee_Ident)
        {
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("Employee_Ident", employee_Ident) :
                new ObjectParameter("Employee_Ident", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Check_Employee_Ident", employee_IdentParameter);
        }
    
        public virtual ObjectResult<Get_Employee_HRreport_Result> Get_Employee_HRreport(Nullable<long> employee_Ident)
        {
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("Employee_Ident", employee_Ident) :
                new ObjectParameter("Employee_Ident", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Employee_HRreport_Result>("Get_Employee_HRreport", employee_IdentParameter);
        }
    
        public virtual ObjectResult<Get_Employees_HRreport_Result> Get_Employees_HRreport(Nullable<short> reportType_Id, Nullable<short> subReportType_Id, Nullable<System.DateTime> reportDateStart, Nullable<System.DateTime> reportDateEnd, Nullable<long> employee_Ident, Nullable<long> manager_Ident, Nullable<long> floorManager_Ident, Nullable<short> location_Ident, string payroll, string cCMS_User, Nullable<int> client_Ident, Nullable<int> program_ident)
        {
            var reportType_IdParameter = reportType_Id.HasValue ?
                new ObjectParameter("reportType_Id", reportType_Id) :
                new ObjectParameter("reportType_Id", typeof(short));
    
            var subReportType_IdParameter = subReportType_Id.HasValue ?
                new ObjectParameter("subReportType_Id", subReportType_Id) :
                new ObjectParameter("subReportType_Id", typeof(short));
    
            var reportDateStartParameter = reportDateStart.HasValue ?
                new ObjectParameter("reportDateStart", reportDateStart) :
                new ObjectParameter("reportDateStart", typeof(System.DateTime));
    
            var reportDateEndParameter = reportDateEnd.HasValue ?
                new ObjectParameter("reportDateEnd", reportDateEnd) :
                new ObjectParameter("reportDateEnd", typeof(System.DateTime));
    
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("employee_Ident", employee_Ident) :
                new ObjectParameter("employee_Ident", typeof(long));
    
            var manager_IdentParameter = manager_Ident.HasValue ?
                new ObjectParameter("manager_Ident", manager_Ident) :
                new ObjectParameter("manager_Ident", typeof(long));
    
            var floorManager_IdentParameter = floorManager_Ident.HasValue ?
                new ObjectParameter("floorManager_Ident", floorManager_Ident) :
                new ObjectParameter("floorManager_Ident", typeof(long));
    
            var location_IdentParameter = location_Ident.HasValue ?
                new ObjectParameter("location_Ident", location_Ident) :
                new ObjectParameter("location_Ident", typeof(short));
    
            var payrollParameter = payroll != null ?
                new ObjectParameter("payroll", payroll) :
                new ObjectParameter("payroll", typeof(string));
    
            var cCMS_UserParameter = cCMS_User != null ?
                new ObjectParameter("CCMS_User", cCMS_User) :
                new ObjectParameter("CCMS_User", typeof(string));
    
            var client_IdentParameter = client_Ident.HasValue ?
                new ObjectParameter("client_Ident", client_Ident) :
                new ObjectParameter("client_Ident", typeof(int));
    
            var program_identParameter = program_ident.HasValue ?
                new ObjectParameter("program_ident", program_ident) :
                new ObjectParameter("program_ident", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Employees_HRreport_Result>("Get_Employees_HRreport", reportType_IdParameter, subReportType_IdParameter, reportDateStartParameter, reportDateEndParameter, employee_IdentParameter, manager_IdentParameter, floorManager_IdentParameter, location_IdentParameter, payrollParameter, cCMS_UserParameter, client_IdentParameter, program_identParameter);
        }
    
        public virtual ObjectResult<Get_ReportType_Result> Get_ReportType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_ReportType_Result>("Get_ReportType");
        }
    
        public virtual ObjectResult<Get_SubReportType_Result> Get_SubReportType(Nullable<short> reportType_Id)
        {
            var reportType_IdParameter = reportType_Id.HasValue ?
                new ObjectParameter("ReportType_Id", reportType_Id) :
                new ObjectParameter("ReportType_Id", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_SubReportType_Result>("Get_SubReportType", reportType_IdParameter);
        }
    
        public virtual int Insert_Employee_HRreport(Nullable<long> employee_Ident, Nullable<System.DateTime> reportDate, Nullable<short> reportType_Id, Nullable<short> subReportType_Id, string reportDescription, Nullable<long> manager_Ident, Nullable<long> floorManager_Ident, Nullable<int> program_Ident, string userIns, Nullable<int> collegeId, Nullable<System.DateTime> dateOfEvent, Nullable<int> reasonId, Nullable<int> specificCauseId)
        {
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("Employee_Ident", employee_Ident) :
                new ObjectParameter("Employee_Ident", typeof(long));
    
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));
    
            var reportType_IdParameter = reportType_Id.HasValue ?
                new ObjectParameter("ReportType_Id", reportType_Id) :
                new ObjectParameter("ReportType_Id", typeof(short));
    
            var subReportType_IdParameter = subReportType_Id.HasValue ?
                new ObjectParameter("SubReportType_Id", subReportType_Id) :
                new ObjectParameter("SubReportType_Id", typeof(short));
    
            var reportDescriptionParameter = reportDescription != null ?
                new ObjectParameter("ReportDescription", reportDescription) :
                new ObjectParameter("ReportDescription", typeof(string));
    
            var manager_IdentParameter = manager_Ident.HasValue ?
                new ObjectParameter("Manager_Ident", manager_Ident) :
                new ObjectParameter("Manager_Ident", typeof(long));
    
            var floorManager_IdentParameter = floorManager_Ident.HasValue ?
                new ObjectParameter("FloorManager_Ident", floorManager_Ident) :
                new ObjectParameter("FloorManager_Ident", typeof(long));
    
            var program_IdentParameter = program_Ident.HasValue ?
                new ObjectParameter("Program_Ident", program_Ident) :
                new ObjectParameter("Program_Ident", typeof(int));
    
            var userInsParameter = userIns != null ?
                new ObjectParameter("UserIns", userIns) :
                new ObjectParameter("UserIns", typeof(string));
    
            var collegeIdParameter = collegeId.HasValue ?
                new ObjectParameter("CollegeId", collegeId) :
                new ObjectParameter("CollegeId", typeof(int));
    
            var dateOfEventParameter = dateOfEvent.HasValue ?
                new ObjectParameter("dateOfEvent", dateOfEvent) :
                new ObjectParameter("dateOfEvent", typeof(System.DateTime));
    
            var reasonIdParameter = reasonId.HasValue ?
                new ObjectParameter("ReasonId", reasonId) :
                new ObjectParameter("ReasonId", typeof(int));
    
            var specificCauseIdParameter = specificCauseId.HasValue ?
                new ObjectParameter("SpecificCauseId", specificCauseId) :
                new ObjectParameter("SpecificCauseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Employee_HRreport", employee_IdentParameter, reportDateParameter, reportType_IdParameter, subReportType_IdParameter, reportDescriptionParameter, manager_IdentParameter, floorManager_IdentParameter, program_IdentParameter, userInsParameter, collegeIdParameter, dateOfEventParameter, reasonIdParameter, specificCauseIdParameter);
        }
    
        public virtual int Update_Employee_HRreport_Commitment(Nullable<int> hRreport_Id, string employeeCommitment)
        {
            var hRreport_IdParameter = hRreport_Id.HasValue ?
                new ObjectParameter("HRreport_Id", hRreport_Id) :
                new ObjectParameter("HRreport_Id", typeof(int));
    
            var employeeCommitmentParameter = employeeCommitment != null ?
                new ObjectParameter("EmployeeCommitment", employeeCommitment) :
                new ObjectParameter("EmployeeCommitment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Employee_HRreport_Commitment", hRreport_IdParameter, employeeCommitmentParameter);
        }
    
        public virtual int Update_Employee_HRreport_Printed(Nullable<int> hRreport_Id, string printedBy)
        {
            var hRreport_IdParameter = hRreport_Id.HasValue ?
                new ObjectParameter("HRreport_Id", hRreport_Id) :
                new ObjectParameter("HRreport_Id", typeof(int));
    
            var printedByParameter = printedBy != null ?
                new ObjectParameter("PrintedBy", printedBy) :
                new ObjectParameter("PrintedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Employee_HRreport_Printed", hRreport_IdParameter, printedByParameter);
        }
    
        public virtual ObjectResult<Get_HRReportPrintingLayout_Result> Get_HRReportPrintingLayout(Nullable<long> employeeId, Nullable<int> hRReportId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(long));
    
            var hRReportIdParameter = hRReportId.HasValue ?
                new ObjectParameter("HRReportId", hRReportId) :
                new ObjectParameter("HRReportId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_HRReportPrintingLayout_Result>("Get_HRReportPrintingLayout", employeeIdParameter, hRReportIdParameter);
        }
    
        public virtual ObjectResult<Get_Employees_x_Hierarchy_Result> Get_Employees_x_Hierarchy(Nullable<long> manager_Ident)
        {
            var manager_IdentParameter = manager_Ident.HasValue ?
                new ObjectParameter("Manager_Ident", manager_Ident) :
                new ObjectParameter("Manager_Ident", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Employees_x_Hierarchy_Result>("Get_Employees_x_Hierarchy", manager_IdentParameter);
        }
    
        public virtual ObjectResult<Get_College_Result> Get_College()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_College_Result>("Get_College");
        }
    
        public virtual int Delete_Employee_HRreport(Nullable<long> employee_Ident, Nullable<int> hRreport_Id, string deactivatedBy)
        {
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("Employee_Ident", employee_Ident) :
                new ObjectParameter("Employee_Ident", typeof(long));
    
            var hRreport_IdParameter = hRreport_Id.HasValue ?
                new ObjectParameter("HRreport_Id", hRreport_Id) :
                new ObjectParameter("HRreport_Id", typeof(int));
    
            var deactivatedByParameter = deactivatedBy != null ?
                new ObjectParameter("DeactivatedBy", deactivatedBy) :
                new ObjectParameter("DeactivatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Employee_HRreport", employee_IdentParameter, hRreport_IdParameter, deactivatedByParameter);
        }
    
        public virtual ObjectResult<Get_Employees_HRreport_Grid_Result> Get_Employees_HRreport_Grid(Nullable<short> reportType_Id, Nullable<short> subReportType_Id, Nullable<System.DateTime> reportDateStart, Nullable<System.DateTime> reportDateEnd, Nullable<long> employee_Ident, Nullable<long> manager_Ident, Nullable<long> floorManager_Ident, Nullable<short> location_Ident, string payroll, string cCMS_User, Nullable<int> client_Ident, Nullable<int> program_ident, Nullable<int> hRreport_Id)
        {
            var reportType_IdParameter = reportType_Id.HasValue ?
                new ObjectParameter("reportType_Id", reportType_Id) :
                new ObjectParameter("reportType_Id", typeof(short));
    
            var subReportType_IdParameter = subReportType_Id.HasValue ?
                new ObjectParameter("subReportType_Id", subReportType_Id) :
                new ObjectParameter("subReportType_Id", typeof(short));
    
            var reportDateStartParameter = reportDateStart.HasValue ?
                new ObjectParameter("reportDateStart", reportDateStart) :
                new ObjectParameter("reportDateStart", typeof(System.DateTime));
    
            var reportDateEndParameter = reportDateEnd.HasValue ?
                new ObjectParameter("reportDateEnd", reportDateEnd) :
                new ObjectParameter("reportDateEnd", typeof(System.DateTime));
    
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("employee_Ident", employee_Ident) :
                new ObjectParameter("employee_Ident", typeof(long));
    
            var manager_IdentParameter = manager_Ident.HasValue ?
                new ObjectParameter("manager_Ident", manager_Ident) :
                new ObjectParameter("manager_Ident", typeof(long));
    
            var floorManager_IdentParameter = floorManager_Ident.HasValue ?
                new ObjectParameter("floorManager_Ident", floorManager_Ident) :
                new ObjectParameter("floorManager_Ident", typeof(long));
    
            var location_IdentParameter = location_Ident.HasValue ?
                new ObjectParameter("location_Ident", location_Ident) :
                new ObjectParameter("location_Ident", typeof(short));
    
            var payrollParameter = payroll != null ?
                new ObjectParameter("payroll", payroll) :
                new ObjectParameter("payroll", typeof(string));
    
            var cCMS_UserParameter = cCMS_User != null ?
                new ObjectParameter("CCMS_User", cCMS_User) :
                new ObjectParameter("CCMS_User", typeof(string));
    
            var client_IdentParameter = client_Ident.HasValue ?
                new ObjectParameter("client_Ident", client_Ident) :
                new ObjectParameter("client_Ident", typeof(int));
    
            var program_identParameter = program_ident.HasValue ?
                new ObjectParameter("program_ident", program_ident) :
                new ObjectParameter("program_ident", typeof(int));
    
            var hRreport_IdParameter = hRreport_Id.HasValue ?
                new ObjectParameter("HRreport_Id", hRreport_Id) :
                new ObjectParameter("HRreport_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Employees_HRreport_Grid_Result>("Get_Employees_HRreport_Grid", reportType_IdParameter, subReportType_IdParameter, reportDateStartParameter, reportDateEndParameter, employee_IdentParameter, manager_IdentParameter, floorManager_IdentParameter, location_IdentParameter, payrollParameter, cCMS_UserParameter, client_IdentParameter, program_identParameter, hRreport_IdParameter);
        }
    
        public virtual ObjectResult<Get_Employees_OnRisk_Grid_Result> Get_Employees_OnRisk_Grid(Nullable<short> riskStatus_Id, Nullable<System.DateTime> riskDateStart, Nullable<System.DateTime> riskDateEnd, Nullable<System.DateTime> reviewDateStart, Nullable<System.DateTime> reviewDateEnd, Nullable<long> employee_Ident, Nullable<long> manager_Ident, Nullable<long> floorManager_Ident, Nullable<short> location_Ident, string payroll, string cCMS_User, Nullable<int> client_Ident, Nullable<int> program_ident)
        {
            var riskStatus_IdParameter = riskStatus_Id.HasValue ?
                new ObjectParameter("riskStatus_Id", riskStatus_Id) :
                new ObjectParameter("riskStatus_Id", typeof(short));
    
            var riskDateStartParameter = riskDateStart.HasValue ?
                new ObjectParameter("riskDateStart", riskDateStart) :
                new ObjectParameter("riskDateStart", typeof(System.DateTime));
    
            var riskDateEndParameter = riskDateEnd.HasValue ?
                new ObjectParameter("riskDateEnd", riskDateEnd) :
                new ObjectParameter("riskDateEnd", typeof(System.DateTime));
    
            var reviewDateStartParameter = reviewDateStart.HasValue ?
                new ObjectParameter("reviewDateStart", reviewDateStart) :
                new ObjectParameter("reviewDateStart", typeof(System.DateTime));
    
            var reviewDateEndParameter = reviewDateEnd.HasValue ?
                new ObjectParameter("reviewDateEnd", reviewDateEnd) :
                new ObjectParameter("reviewDateEnd", typeof(System.DateTime));
    
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("employee_Ident", employee_Ident) :
                new ObjectParameter("employee_Ident", typeof(long));
    
            var manager_IdentParameter = manager_Ident.HasValue ?
                new ObjectParameter("manager_Ident", manager_Ident) :
                new ObjectParameter("manager_Ident", typeof(long));
    
            var floorManager_IdentParameter = floorManager_Ident.HasValue ?
                new ObjectParameter("floorManager_Ident", floorManager_Ident) :
                new ObjectParameter("floorManager_Ident", typeof(long));
    
            var location_IdentParameter = location_Ident.HasValue ?
                new ObjectParameter("location_Ident", location_Ident) :
                new ObjectParameter("location_Ident", typeof(short));
    
            var payrollParameter = payroll != null ?
                new ObjectParameter("payroll", payroll) :
                new ObjectParameter("payroll", typeof(string));
    
            var cCMS_UserParameter = cCMS_User != null ?
                new ObjectParameter("CCMS_User", cCMS_User) :
                new ObjectParameter("CCMS_User", typeof(string));
    
            var client_IdentParameter = client_Ident.HasValue ?
                new ObjectParameter("client_Ident", client_Ident) :
                new ObjectParameter("client_Ident", typeof(int));
    
            var program_identParameter = program_ident.HasValue ?
                new ObjectParameter("program_ident", program_ident) :
                new ObjectParameter("program_ident", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Employees_OnRisk_Grid_Result>("Get_Employees_OnRisk_Grid", riskStatus_IdParameter, riskDateStartParameter, riskDateEndParameter, reviewDateStartParameter, reviewDateEndParameter, employee_IdentParameter, manager_IdentParameter, floorManager_IdentParameter, location_IdentParameter, payrollParameter, cCMS_UserParameter, client_IdentParameter, program_identParameter);
        }
    
        public virtual ObjectResult<Get_Reasons_Result> Get_Reasons()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Reasons_Result>("Get_Reasons");
        }
    
        public virtual ObjectResult<Get_SpecificCause_By_Reason_Result> Get_SpecificCause_By_Reason(Nullable<short> reasonId)
        {
            var reasonIdParameter = reasonId.HasValue ?
                new ObjectParameter("ReasonId", reasonId) :
                new ObjectParameter("ReasonId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_SpecificCause_By_Reason_Result>("Get_SpecificCause_By_Reason", reasonIdParameter);
        }
    
        public virtual int Update_Employee_HRreport(Nullable<int> hRreport_Id, Nullable<System.DateTime> reportDate, Nullable<short> reportType_Id, Nullable<short> subReportType_Id, string reportDescription, string userUpd, Nullable<bool> delivered, Nullable<bool> interaction, string employeeCommitment, Nullable<System.DateTime> employeeCommitmentDate, string acknowledgment, string futureImplications, Nullable<System.DateTime> acknowledgmentDate, Nullable<int> collegeId, Nullable<System.DateTime> dateOfEvent, Nullable<int> reasonId, Nullable<int> specificCauseId)
        {
            var hRreport_IdParameter = hRreport_Id.HasValue ?
                new ObjectParameter("HRreport_Id", hRreport_Id) :
                new ObjectParameter("HRreport_Id", typeof(int));
    
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));
    
            var reportType_IdParameter = reportType_Id.HasValue ?
                new ObjectParameter("ReportType_Id", reportType_Id) :
                new ObjectParameter("ReportType_Id", typeof(short));
    
            var subReportType_IdParameter = subReportType_Id.HasValue ?
                new ObjectParameter("SubReportType_Id", subReportType_Id) :
                new ObjectParameter("SubReportType_Id", typeof(short));
    
            var reportDescriptionParameter = reportDescription != null ?
                new ObjectParameter("ReportDescription", reportDescription) :
                new ObjectParameter("ReportDescription", typeof(string));
    
            var userUpdParameter = userUpd != null ?
                new ObjectParameter("UserUpd", userUpd) :
                new ObjectParameter("UserUpd", typeof(string));
    
            var deliveredParameter = delivered.HasValue ?
                new ObjectParameter("Delivered", delivered) :
                new ObjectParameter("Delivered", typeof(bool));
    
            var interactionParameter = interaction.HasValue ?
                new ObjectParameter("Interaction", interaction) :
                new ObjectParameter("Interaction", typeof(bool));
    
            var employeeCommitmentParameter = employeeCommitment != null ?
                new ObjectParameter("EmployeeCommitment", employeeCommitment) :
                new ObjectParameter("EmployeeCommitment", typeof(string));
    
            var employeeCommitmentDateParameter = employeeCommitmentDate.HasValue ?
                new ObjectParameter("EmployeeCommitmentDate", employeeCommitmentDate) :
                new ObjectParameter("EmployeeCommitmentDate", typeof(System.DateTime));
    
            var acknowledgmentParameter = acknowledgment != null ?
                new ObjectParameter("Acknowledgment", acknowledgment) :
                new ObjectParameter("Acknowledgment", typeof(string));
    
            var futureImplicationsParameter = futureImplications != null ?
                new ObjectParameter("FutureImplications", futureImplications) :
                new ObjectParameter("FutureImplications", typeof(string));
    
            var acknowledgmentDateParameter = acknowledgmentDate.HasValue ?
                new ObjectParameter("AcknowledgmentDate", acknowledgmentDate) :
                new ObjectParameter("AcknowledgmentDate", typeof(System.DateTime));
    
            var collegeIdParameter = collegeId.HasValue ?
                new ObjectParameter("CollegeId", collegeId) :
                new ObjectParameter("CollegeId", typeof(int));
    
            var dateOfEventParameter = dateOfEvent.HasValue ?
                new ObjectParameter("dateOfEvent", dateOfEvent) :
                new ObjectParameter("dateOfEvent", typeof(System.DateTime));
    
            var reasonIdParameter = reasonId.HasValue ?
                new ObjectParameter("ReasonId", reasonId) :
                new ObjectParameter("ReasonId", typeof(int));
    
            var specificCauseIdParameter = specificCauseId.HasValue ?
                new ObjectParameter("SpecificCauseId", specificCauseId) :
                new ObjectParameter("SpecificCauseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Employee_HRreport", hRreport_IdParameter, reportDateParameter, reportType_IdParameter, subReportType_IdParameter, reportDescriptionParameter, userUpdParameter, deliveredParameter, interactionParameter, employeeCommitmentParameter, employeeCommitmentDateParameter, acknowledgmentParameter, futureImplicationsParameter, acknowledgmentDateParameter, collegeIdParameter, dateOfEventParameter, reasonIdParameter, specificCauseIdParameter);
        }
    
        public virtual ObjectResult<Get_RiskListType_Result> Get_RiskListType(Nullable<int> barometerTypeId)
        {
            var barometerTypeIdParameter = barometerTypeId.HasValue ?
                new ObjectParameter("BarometerTypeId", barometerTypeId) :
                new ObjectParameter("BarometerTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_RiskListType_Result>("Get_RiskListType", barometerTypeIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Insert_Employee_Barometer(Nullable<long> employee_Ident, Nullable<System.DateTime> registrationDate, Nullable<short> riskListType_Id, Nullable<short> term_Reason_Ident, Nullable<short> barometerTypeId, string barometerValue, string userIns)
        {
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("Employee_Ident", employee_Ident) :
                new ObjectParameter("Employee_Ident", typeof(long));
    
            var registrationDateParameter = registrationDate.HasValue ?
                new ObjectParameter("RegistrationDate", registrationDate) :
                new ObjectParameter("RegistrationDate", typeof(System.DateTime));
    
            var riskListType_IdParameter = riskListType_Id.HasValue ?
                new ObjectParameter("RiskListType_Id", riskListType_Id) :
                new ObjectParameter("RiskListType_Id", typeof(short));
    
            var term_Reason_IdentParameter = term_Reason_Ident.HasValue ?
                new ObjectParameter("Term_Reason_Ident", term_Reason_Ident) :
                new ObjectParameter("Term_Reason_Ident", typeof(short));
    
            var barometerTypeIdParameter = barometerTypeId.HasValue ?
                new ObjectParameter("BarometerTypeId", barometerTypeId) :
                new ObjectParameter("BarometerTypeId", typeof(short));
    
            var barometerValueParameter = barometerValue != null ?
                new ObjectParameter("BarometerValue", barometerValue) :
                new ObjectParameter("BarometerValue", typeof(string));
    
            var userInsParameter = userIns != null ?
                new ObjectParameter("UserIns", userIns) :
                new ObjectParameter("UserIns", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Insert_Employee_Barometer", employee_IdentParameter, registrationDateParameter, riskListType_IdParameter, term_Reason_IdentParameter, barometerTypeIdParameter, barometerValueParameter, userInsParameter);
        }
    
        public virtual ObjectResult<Get_Employee_OnBarometer_Result> Get_Employee_OnBarometer(Nullable<long> employee_Ident, string barometerValue)
        {
            var employee_IdentParameter = employee_Ident.HasValue ?
                new ObjectParameter("Employee_Ident", employee_Ident) :
                new ObjectParameter("Employee_Ident", typeof(long));
    
            var barometerValueParameter = barometerValue != null ?
                new ObjectParameter("BarometerValue", barometerValue) :
                new ObjectParameter("BarometerValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Employee_OnBarometer_Result>("Get_Employee_OnBarometer", employee_IdentParameter, barometerValueParameter);
        }
    }
}
