//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace TP_Retention.CCMSService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://teleperformance.com/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DeleteDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataWithSyncOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeByCCMSIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEmployeeImageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::TP_Retention.Properties.Settings.Default.TP_Retention_CCMSService_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DeleteDataCompletedEventHandler DeleteDataCompleted;
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event GetDataWithSyncOptionCompletedEventHandler GetDataWithSyncOptionCompleted;
        
        /// <remarks/>
        public event SetDataCompletedEventHandler SetDataCompleted;
        
        /// <remarks/>
        public event GetEmployeeByUserIdCompletedEventHandler GetEmployeeByUserIdCompleted;
        
        /// <remarks/>
        public event GetEmployeeByCCMSIDCompletedEventHandler GetEmployeeByCCMSIDCompleted;
        
        /// <remarks/>
        public event GetEmployeeImageCompletedEventHandler GetEmployeeImageCompleted;
        
        /// <remarks/>
        public event SetEmployeeImageCompletedEventHandler SetEmployeeImageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://teleperformance.com/DeleteData", RequestNamespace="http://teleperformance.com/", ResponseNamespace="http://teleperformance.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteData(string XQuery) {
            this.Invoke("DeleteData", new object[] {
                        XQuery});
        }
        
        /// <remarks/>
        public void DeleteDataAsync(string XQuery) {
            this.DeleteDataAsync(XQuery, null);
        }
        
        /// <remarks/>
        public void DeleteDataAsync(string XQuery, object userState) {
            if ((this.DeleteDataOperationCompleted == null)) {
                this.DeleteDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDataOperationCompleted);
            }
            this.InvokeAsync("DeleteData", new object[] {
                        XQuery}, this.DeleteDataOperationCompleted, userState);
        }
        
        private void OnDeleteDataOperationCompleted(object arg) {
            if ((this.DeleteDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://teleperformance.com/GetData", RequestNamespace="http://teleperformance.com/", ResponseNamespace="http://teleperformance.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetData(string XQuery) {
            object[] results = this.Invoke("GetData", new object[] {
                        XQuery});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(string XQuery) {
            this.GetDataAsync(XQuery, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(string XQuery, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        XQuery}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://teleperformance.com/GetDataWithSyncOption", RequestNamespace="http://teleperformance.com/", ResponseNamespace="http://teleperformance.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDataWithSyncOption(string XQuery, bool syncEmployees) {
            object[] results = this.Invoke("GetDataWithSyncOption", new object[] {
                        XQuery,
                        syncEmployees});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataWithSyncOptionAsync(string XQuery, bool syncEmployees) {
            this.GetDataWithSyncOptionAsync(XQuery, syncEmployees, null);
        }
        
        /// <remarks/>
        public void GetDataWithSyncOptionAsync(string XQuery, bool syncEmployees, object userState) {
            if ((this.GetDataWithSyncOptionOperationCompleted == null)) {
                this.GetDataWithSyncOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataWithSyncOptionOperationCompleted);
            }
            this.InvokeAsync("GetDataWithSyncOption", new object[] {
                        XQuery,
                        syncEmployees}, this.GetDataWithSyncOptionOperationCompleted, userState);
        }
        
        private void OnGetDataWithSyncOptionOperationCompleted(object arg) {
            if ((this.GetDataWithSyncOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataWithSyncOptionCompleted(this, new GetDataWithSyncOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://teleperformance.com/SetData", RequestNamespace="http://teleperformance.com/", ResponseNamespace="http://teleperformance.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetData(string XML) {
            this.Invoke("SetData", new object[] {
                        XML});
        }
        
        /// <remarks/>
        public void SetDataAsync(string XML) {
            this.SetDataAsync(XML, null);
        }
        
        /// <remarks/>
        public void SetDataAsync(string XML, object userState) {
            if ((this.SetDataOperationCompleted == null)) {
                this.SetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDataOperationCompleted);
            }
            this.InvokeAsync("SetData", new object[] {
                        XML}, this.SetDataOperationCompleted, userState);
        }
        
        private void OnSetDataOperationCompleted(object arg) {
            if ((this.SetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://teleperformance.com/GetEmployeeByUserId", RequestNamespace="http://teleperformance.com/", ResponseNamespace="http://teleperformance.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmployeeByUserId(string userid) {
            object[] results = this.Invoke("GetEmployeeByUserId", new object[] {
                        userid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeByUserIdAsync(string userid) {
            this.GetEmployeeByUserIdAsync(userid, null);
        }
        
        /// <remarks/>
        public void GetEmployeeByUserIdAsync(string userid, object userState) {
            if ((this.GetEmployeeByUserIdOperationCompleted == null)) {
                this.GetEmployeeByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeByUserId", new object[] {
                        userid}, this.GetEmployeeByUserIdOperationCompleted, userState);
        }
        
        private void OnGetEmployeeByUserIdOperationCompleted(object arg) {
            if ((this.GetEmployeeByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeByUserIdCompleted(this, new GetEmployeeByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://teleperformance.com/GetEmployeeByCCMSID", RequestNamespace="http://teleperformance.com/", ResponseNamespace="http://teleperformance.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmployeeByCCMSID(int ccmsID) {
            object[] results = this.Invoke("GetEmployeeByCCMSID", new object[] {
                        ccmsID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeByCCMSIDAsync(int ccmsID) {
            this.GetEmployeeByCCMSIDAsync(ccmsID, null);
        }
        
        /// <remarks/>
        public void GetEmployeeByCCMSIDAsync(int ccmsID, object userState) {
            if ((this.GetEmployeeByCCMSIDOperationCompleted == null)) {
                this.GetEmployeeByCCMSIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeByCCMSIDOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeByCCMSID", new object[] {
                        ccmsID}, this.GetEmployeeByCCMSIDOperationCompleted, userState);
        }
        
        private void OnGetEmployeeByCCMSIDOperationCompleted(object arg) {
            if ((this.GetEmployeeByCCMSIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeByCCMSIDCompleted(this, new GetEmployeeByCCMSIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://teleperformance.com/GetEmployeeImage", RequestNamespace="http://teleperformance.com/", ResponseNamespace="http://teleperformance.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmployeeImage(int ccmsId) {
            object[] results = this.Invoke("GetEmployeeImage", new object[] {
                        ccmsId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeImageAsync(int ccmsId) {
            this.GetEmployeeImageAsync(ccmsId, null);
        }
        
        /// <remarks/>
        public void GetEmployeeImageAsync(int ccmsId, object userState) {
            if ((this.GetEmployeeImageOperationCompleted == null)) {
                this.GetEmployeeImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeImageOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeImage", new object[] {
                        ccmsId}, this.GetEmployeeImageOperationCompleted, userState);
        }
        
        private void OnGetEmployeeImageOperationCompleted(object arg) {
            if ((this.GetEmployeeImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeImageCompleted(this, new GetEmployeeImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://teleperformance.com/SetEmployeeImage", RequestNamespace="http://teleperformance.com/", ResponseNamespace="http://teleperformance.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetEmployeeImage(int ccmsId, string image) {
            this.Invoke("SetEmployeeImage", new object[] {
                        ccmsId,
                        image});
        }
        
        /// <remarks/>
        public void SetEmployeeImageAsync(int ccmsId, string image) {
            this.SetEmployeeImageAsync(ccmsId, image, null);
        }
        
        /// <remarks/>
        public void SetEmployeeImageAsync(int ccmsId, string image, object userState) {
            if ((this.SetEmployeeImageOperationCompleted == null)) {
                this.SetEmployeeImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEmployeeImageOperationCompleted);
            }
            this.InvokeAsync("SetEmployeeImage", new object[] {
                        ccmsId,
                        image}, this.SetEmployeeImageOperationCompleted, userState);
        }
        
        private void OnSetEmployeeImageOperationCompleted(object arg) {
            if ((this.SetEmployeeImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEmployeeImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetDataWithSyncOptionCompletedEventHandler(object sender, GetDataWithSyncOptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataWithSyncOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataWithSyncOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SetDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetEmployeeByUserIdCompletedEventHandler(object sender, GetEmployeeByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetEmployeeByCCMSIDCompletedEventHandler(object sender, GetEmployeeByCCMSIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeByCCMSIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeByCCMSIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetEmployeeImageCompletedEventHandler(object sender, GetEmployeeImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SetEmployeeImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591